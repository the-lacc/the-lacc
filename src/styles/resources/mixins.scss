/* ---- Mixins ---- */
@use "sass:math";

/* -- Transition -- */
@mixin transition($delay: $transition-delay) {
    transition: $transition-property $delay $transition-timing;
}

/* -- Link Hover -- */
@mixin link-hover($opacity: $link-hover-opacity) {
    opacity: $opacity;
    @include transition();
}

/* -- Fade -- */
@mixin fade($status) {
    @if $status ==in {
        opacity: 1;
        pointer-events: visible;
    }

    @if $status ==out {
        opacity: 0;
        pointer-events: none;
    }

    @include transition();
}

/* -- Background -- */
@mixin background($url) {
    background: url($url) no-repeat center top / cover;
}

/* -- Background Opacity -- */
@mixin background-opacity($color, $opacity) {
    background: $color;
    background: rgba($color, $opacity);
}

/* -- Color Opacity -- */
@mixin color-opacity($color, $opacity) {
    color: rgba($color, $opacity);
}

/* -- Selection -- */
@mixin selection {
    @include background-opacity($theme-color, 0.7);
    color: $white-1;
    text-shadow: none;
}

/* -- Flexible -- */
@mixin flexible {
    display: flex;
    align-items: center;
}

/* -- Full Stretch -- */
@mixin full-stretch {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
}

/* -- Center Element -- */
@mixin center-element {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* -- Center All Content -- */
@mixin center-all-content {
    @include full-stretch();
    @include flexible();
    justify-content: center;
    text-align: center;
}

/* -- Reset Indents -- */
@mixin reset-indents {
    margin: 0;
    padding: 0;
}

/* -- Pointer -- */
@mixin pointer {
    cursor: url("/cursors/link.cur"), pointer !important;
}

@mixin beam {
    cursor: url("/cursors/beam.cur"), pointer !important;
}

/* -- Media Queries -- */
@mixin mq($size: "480", $type: "<", $size-next: null) {
    @if ($type ==">") {
        @media (min-width: #{$size}px) {
            @content;
        }
    }

    @if ($type =="<") {
        @media (max-width: #{$size}px) {
            @content;
        }
    }

    @if ($type =="<>") {
        @media screen and (min-width: #{$size}px) and (max-width: #{$size-next}px) {
            @content;
        }
    }
}

@mixin font($font-name, $file-name, $weight, $style) {
    @font-face {
        font-family: $font-name;
        font-display: swap;
        src: url("../fonts/#{$file-name}.woff2") format("woff2"),
        url("../fonts/#{$file-name}.woff") format("woff");
        font-weight: #{$weight};
        font-style: #{$style};
    }
}

/* -- Create Gutter -- */
@mixin create-gutter($screen-width, $gutter: "") {
    @if ($screen-width =="default") {
        width: $container-default-width;
        margin: 0 auto;
    }

    @else {
        @include mq($screen-width) {
            $percent-gutter: percent($gutter, $screen-width);
            padding-left: $percent-gutter;
            padding-right: $percent-gutter;
            width: 100%;
            margin: 0;
        }
    }
}

/* -- Responsive Container -- */
@mixin responsive-container() {
    @include create-gutter("default");
    @include create-gutter($desktop, $container-desktop-gutter);

    @include create-gutter($laptop, $container-laptop-gutter);
    @include create-gutter($tablet-large, $container-tablet-large-gutter);
    @include create-gutter($tablet, $container-tablet-gutter);
    @include create-gutter($phablet, $container-phablet-gutter);
}

/* -- Menu Top Calculate -- */
@mixin menu-top-calc() {
    top: calc($header-padding-desktop-gutter + 50px + $header-padding-desktop-gutter );

    @include mq($tablet-large) {
        top: calc($header-padding-tablet-large-gutter + 50px + $header-padding-tablet-large-gutter );
    }

    @include mq($tablet) {
        top: calc($header-padding-tablet-gutter + 50px + $header-padding-tablet-gutter );
    }

    @include mq($phablet) {
        top: calc($header-padding-phablet-gutter + 50px + $header-padding-phablet-gutter );
    }
}

@mixin menu-top-calc-minus() {
    top: calc(($header-padding-desktop-gutter * 2) * -1);

    @include mq($tablet-large) {
        top: calc(($header-padding-tablet-large-gutter * 2) * -1);
    }

    @include mq($tablet) {
        top: calc(($header-padding-tablet-gutter * 2) * -1);
    }

    @include mq($phablet) {
        top: calc((($header-padding-phablet-gutter * 2) * -1) - 10px);
    }
}